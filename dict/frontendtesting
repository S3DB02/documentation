# End-to-End Testing with Cypress

## Overview

In the MangaMonkey frontend application, we have implemented end-to-end testing using Cypress. Cypress is a next-generation front-end testing tool built for the modern web. It addresses the key pain points developers and QA engineers face when testing modern applications.

## Structure

The Cypress tests are located in the `cypress/e2e` directory. Each JavaScript file in this directory corresponds to a different test suite for a specific feature of the application.

## Test Suites

We have two main test suites:

1. **Logged in tests (`login.cy.js`)**: This suite includes tests that simulate actions that a logged-in user would perform, such as logging into the application, navigating to the manga page, and adding a manga to their list.

```javascript
describe('Logged in tests', () => {
    it('logs the user in and adds a manga to their list', () => {
        cy.visit('http://localhost:3000/login');

        cy.get('#loginButton')
            .click();

        cy.origin(`https://${Cypress.env('auth_audience')}`, () => {

            cy.get('#username').should('be.visible').type(Cypress.env('auth_username'));

            cy.get('#password').should('be.visible').type(Cypress.env('auth_password')).type('{enter}');
        });

        cy.get('#mangaLink').should('be.visible').click();

        cy.wait(2000);

        cy.get('button').should('be.visible').click();

        cy.wait(4000);
    });
});
```

2. **Logged out tests (`login.cy.js`)**: This suite includes tests that attempt to perform actions that only a logged-in user could perform, in order to confirm that these actions fail as expected when the user is not authenticated.

```javascript
describe('Logged out tests', () => {
    it('tries to add a manga to their list', () => {
        cy.visit('http://localhost:3000/manga/cfc3d743-bd89-48e2-991f-63e680cc4edf');

        cy.window().then((win) => {
            cy.stub(win.console, 'error').as('consoleError');
        });

        cy.get('button').should('be.visible').click();

        cy.get('@consoleError').should('be.calledWith', 'User is not authenticated');

        cy.wait(4000);
    });
});
```

## Running Tests

To run the tests, you can use the following command:

```bash
npx cypress run

